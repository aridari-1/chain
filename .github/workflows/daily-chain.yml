name: Rolling 24-Hour Global Chain

on:
  schedule:
    # Run every hour to check if 24 h have passed since the last chain
    - cron: "0 * * * *"
  workflow_dispatch:  # allows manual trigger too

jobs:
  check-and-create-chain:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

    steps:
      - name: Fetch latest global chain
        id: latest
        run: |
          set -e
          LATEST_JSON=$(curl -fsS \
            "$SUPABASE_URL/rest/v1/chains?type=eq.global&order=created_at.desc&limit=1" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Accept: application/json")
          echo "latest_json=$LATEST_JSON" >> $GITHUB_OUTPUT

      - name: Determine if 24 h have passed
        id: decide
        run: |
          set -e
          latest_json='${{ steps.latest.outputs.latest_json }}'
          node -e "
            const data = ${latest_json || '[]'};
            const latest = Array.isArray(data) && data[0] ? data[0] : null;
            const needsNew = (() => {
              if (!latest) return true;
              const createdAt = new Date(latest.created_at).getTime();
              const now = Date.now();
              return (now - createdAt) >= 24*60*60*1000;
            })();
            const id = latest?.id || '';
            console.log('needsNew=' + needsNew);
            console.log('currentId=' + id);
          " | tee decide.log

          NEEDS_NEW=$(grep '^needsNew=' decide.log | cut -d= -f2)
          CURR_ID=$(grep '^currentId=' decide.log | cut -d= -f2)

          echo "needs_new=$NEEDS_NEW" >> $GITHUB_OUTPUT
          echo "current_id=$CURR_ID"  >> $GITHUB_OUTPUT

      - name: Create new chain if 24 h passed
        if: steps.decide.outputs.needs_new == 'true'
        run: |
          set -e
          echo "24 h have passed since last chain — creating new one…"

          # 1️⃣ Deactivate all old chains
          curl -fsS -X PATCH \
            "$SUPABASE_URL/rest/v1/chains?type=eq.global" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Content-Type: application/json" \
            -d '{"active": false}'

          # 2️⃣ Create new active chain
          curl -fsS -X POST \
            "$SUPABASE_URL/rest/v1/chains" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Content-Type: application/json" \
            --data '{"type":"global","max_clips":null,"creator_id":null,"active":true}'
