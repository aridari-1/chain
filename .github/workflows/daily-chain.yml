name: Daily Global Chain (Rolling 24h)

on:
  schedule:
    # Run every 10 minutes to check if 24h passed
    - cron: "*/10 * * * *"
  workflow_dispatch:

jobs:
  create-chain-and-clean-old:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

    steps:
      - name: Fetch latest global chain
        id: latest
        run: |
          set -e
          echo "🔍 Fetching the latest active global chain..."
          LATEST_JSON=$(curl -fsS \
            "$SUPABASE_URL/rest/v1/chains?type=eq.global&order=created_at.desc&limit=1" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Accept: application/json")
          echo "latest_json=$LATEST_JSON" >> $GITHUB_OUTPUT
          echo "✅ Latest chain fetched."

      - name: Determine if we need to create a new chain
        id: decide
        run: |
          set -e
          latest_json='${{ steps.latest.outputs.latest_json }}'
          node -e "
            const data = ${latest_json || '[]'};
            const latest = Array.isArray(data) && data[0] ? data[0] : null;
            const needsNew = (() => {
              if (!latest) return true;
              const createdAt = new Date(latest.created_at).getTime();
              const now = Date.now();
              return (now - createdAt) >= 24 * 60 * 60 * 1000;
            })();
            const id = latest?.id || '';
            console.log('needsNew=' + needsNew);
            console.log('currentId=' + id);
          " | tee decide.log

          NEEDS_NEW=$(grep '^needsNew=' decide.log | cut -d= -f2)
          CURR_ID=$(grep '^currentId=' decide.log | cut -d= -f2)
          echo "needs_new=$NEEDS_NEW" >> $GITHUB_OUTPUT
          echo "current_id=$CURR_ID"  >> $GITHUB_OUTPUT

      - name: Attempt to create new global chain (with full response)
        if: steps.decide.outputs.needs_new == 'true'
        id: create
        run: |
          set -e
          echo "📡 Attempting to create a new global chain..."
          RESPONSE=$(curl -i -X POST \
            "$SUPABASE_URL/rest/v1/chains" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=representation" \
            --data '{"type":"global","max_clips":null,"creator_id":null,"active":true}')
          echo "✅ Response from Supabase:"
          echo "$RESPONSE"

      - name: Resolve current chain id
        id: resolve
        run: |
          set -e
          NEW_ID='${{ steps.create.outputs.new_chain_id }}'
          CURR_ID='${{ steps.decide.outputs.current_id }}'
          if [ -n "$NEW_ID" ]; then
            echo "chain_id=$NEW_ID" >> $GITHUB_OUTPUT
          else
            echo "chain_id=$CURR_ID" >> $GITHUB_OUTPUT
          fi

      - name: Deactivate older chains (keep only the latest)
        if: steps.resolve.outputs.chain_id != ''
        run: |
          set -e
          CHAIN_ID='${{ steps.resolve.outputs.chain_id }}'
          echo "🧹 Deactivating older chains..."
          curl -i -X PATCH \
            "$SUPABASE_URL/rest/v1/chains?type=eq.global&id=neq.$CHAIN_ID" \
            -H "apikey: $SERVICE_KEY" \
            -H "Authorization: Bearer $SERVICE_KEY" \
            -H "Content-Type: application/json" \
            -d '{"active": false}'
          echo "✅ Old chains deactivated."
